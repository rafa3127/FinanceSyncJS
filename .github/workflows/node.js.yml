name: Node.js CI/CD & Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      
      - name: Install Dependencies
        run: npm ci

      # - name: Lint
      #   run: npm run lint 
      # - name: Test
      #   run: npm run test

      - name: Build (if applicable)
        run: npm run build --if-present

  release_please:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && !contains(github.event.head_commit.message, 'chore(release):')
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_SEMANTIC_RELEASE_TOKEN }}

      - name: Run Release Please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: node 
          token: ${{ secrets.GH_SEMANTIC_RELEASE_TOKEN }}

      - name: Publish to npm
        if: steps.release.outputs.release_created == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Dependencies (for publish step)
        if: steps.release.outputs.release_created == 'true'
        run: npm ci

      - name: Build (for publish step, if needed before publish)
        if: steps.release.outputs.release_created == 'true'
        run: npm run build --if-present
        
      - name: NPM Publish
        if: steps.release.outputs.release_created == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}